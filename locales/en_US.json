{
  "system": {
    "prompt": {
      "title": "You are a professional code review assistant. Please carefully analyze the provided code changes and evaluate them from the following aspects:",
      "aspects": {
        "quality": "**Code Quality**: Check code style, naming conventions, and comment quality",
        "correctness": "**Functional Correctness**: Analyze whether the logic is correct and whether it may introduce bugs",
        "performance": "**Performance Impact**: Evaluate the potential impact on system performance",
        "security": "**Security**: Check for security vulnerabilities or risks",
        "maintainability": "**Maintainability**: Evaluate code readability and maintainability"
      },
      "format": "Please return the review results in JSON format, containing the following fields:",
      "fields": {
        "approved": "approved: boolean (whether to approve)",
        "score": "score: number (1-10 points, 10 is the highest)",
        "issues": "issues: array (list of issues found, no more than 3)",
        "suggestions": "suggestions: array (list of improvement suggestions, no more than 3)",
        "summary": "summary: string (summary, keep it brief, no more than 50 characters)"
      },
      "example": "Example format:"
    }
  },
  "user": {
    "prompt": {
      "note": "‚ö†Ô∏è **Note**: This may be a resubmitted merge request. Please pay special attention to whether the previously mentioned issues have been fixed. If there were no previous issues, please ignore this and focus on potential issues that may appear currently.",
      "change_content": "Change content:"
    }
  },
  "discussion": {
    "issues_title": "#### ‚ö†Ô∏è Issues Found",
    "suggestions_title": "#### üí° Improvement Suggestions",
    "summary_title": "#### üìù Summary",
    "score_text": "**Score**",
    "generated_by": "*This comment was automatically generated by {model} (Duration: {duration}s).*"
  },
  "log": {
    "gitlab_connection_failed": "GitLab connection failed",
    "ignore_event_type": "Ignoring event type",
    "webhook_processing_failed": "Webhook processing failed",
    "event_missing_fields": "Event data missing required fields",
    "project_no_permission": "No permission to process project {project_id}",
    "project_get_failed": "Failed to get project {project_id}",
    "project_not_participating": "Project <{project}> not participating in review, skipping",
    "mr_status_skip": "Merge request {project} (!{iid}) status is {state}, skipping",
    "mr_already_approved": "Merge request {project} (!{iid}) already approved, skipping",
    "mr_check_status_failed": "Failed to check status of merge request {project} (!{iid})",
    "mr_action_start": "Merge request {project} (!{iid}) {action} started processing",
    "mr_other_action": "Other merge request action: {action}, skipping",
    "mr_no_changes": "Merge request {mr_info} has no file changes, skipping",
    "mr_review_start": "Merge request {mr_info} started code review, {count} files total",
    "mr_no_review_files": "Merge request {mr_info} has no files to review, skipping",
    "mr_event_process_failed": "Failed to process merge request event"
  },
  "status": {
    "accepted": "accepted",
    "ignored": "ignored",
    "pending": "pending",
    "approved": "approved",
    "rejected": "rejected"
  },
  "response": {
    "merge_request_queued": "Merge request event queued for processing",
    "event_not_handled": "Event type {event_type} not handled",
    "internal_server_error": "Internal server error"
  }
}