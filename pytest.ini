[tool:pytest]
# pytest 配置文件

# 测试发现
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# 输出配置
addopts = 
    -v
    --tb=short
    --strict-markers
    --strict-config
    --color=yes
    --durations=10
    --cov=.
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=80
    --cov-exclude=tests/*
    --cov-exclude=venv/*
    --cov-exclude=.venv/*

# 标记定义
markers =
    unit: 单元测试
    integration: 集成测试
    performance: 性能测试
    slow: 慢速测试
    database: 需要数据库的测试
    network: 需要网络的测试
    llm: 需要 LLM 服务的测试
    gitlab: 需要 GitLab API 的测试

# 过滤警告
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:requests.*
    ignore::UserWarning:urllib3.*

# 最小版本要求
minversion = 6.0

# 测试超时（秒）
timeout = 300

# 并行测试
# 取消注释以启用并行测试
# addopts = -n auto

# 日志配置
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# 测试文件编码
encoding = utf-8

# 禁用缓存
cache_dir = .pytest_cache

# 测试数据目录
testmon_datafile = .testmondata

# JUnit XML 报告
junit_family = xunit2
junit_logging = all
junit_log_passing_tests = true

# 性能测试配置
benchmark-only = false
benchmark-sort = mean
benchmark-group-by = group
benchmark-timer = time.perf_counter
benchmark-disable-gc = true
benchmark-skip = false